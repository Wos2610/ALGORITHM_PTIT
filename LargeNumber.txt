// ADD
string add(string a, string b){
    int n = a.size();
    int m = b.size();
    while(n < m){
        a = '0' + a;
        n++;
    }
    while(n > m){
        b = '0' + b;
        m++;
    }
    int sum = 0;
    int rem = 0;
    string s;
    for(int i = n - 1; i >= 0; i--){
        sum = a[i] - '0' + b[i] - '0' + rem;
        rem = sum / 10;
        s = char(sum % 10 + '0') + s;
    }
    if(rem == 1){
        s = '1' + s;
    }
    
    while(s[0] == '0' && s.size() > 1){
        s.erase(0, 1);
    }
    return s;
}

// SUB
string sub(string a, string b){
    int n = a.size();
    int m = b.size();
    while(n < m){
        a = '0' + a;
        n++;
    }
    while(n > m){
        b = '0' + b;
        m++;
    }
    int mark = 0;
    if(a < b){
        swap(a, b);
        mark = 1;
    }
    int sum = 0;
    int rem = 0;
    string s = "";
    for(int i = n - 1; i >= 0; i--){
        sum = a[i] - '0' - b[i] + '0' - rem;
        if(sum >= 0){
            rem = 0;
        }
        else{
            rem = 1;
            sum += 10;
        }
        s = char(sum % 10 + '0') + s;
    }
    while(s[0] == '0' && s.size() > 1){
        s.erase(0, 1);
    }
    if(mark == 1){
        s = '-' + s;
    }
    return s;
}

// MUL
string mul(string a, string b){
    int n = a.size();
    int m = b.size();
    vector<int> t(n + m, 0);

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            t[i + j] += (a[i] - '0')*(b[j] - '0');
        }
    }

    string s = "";
    int rem = 0;

    for(int i = n - 1 + m - 1; i >= 0; i--){
        t[i] += rem;
        s = char(t[i] % 10 + '0') + s;
        rem = t[i]/10;
    }

    if(rem > 0){
        s = char(rem + '0') + s;
    }
    while(s[0] == '0' && s.size() > 1){
        s.erase(0, 1);
    }
    
    return s;
}

//MOD
string n;
long long m;
cin >> n >> m;
long long mod = 0;
for(int i = 0; i < n.size(); i++){
	int temp = n[i] - '0';
	mod = mod * 10 + temp;
	mod %= m;
}
	
cout << mod << "\n";